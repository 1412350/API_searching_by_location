<div class="row">
  <div class="col-lg-5">
    <form id="api" action="location_search" method="post" onsubmit="return codeAddress()">
      <%= hidden_field_tag :authenticity_token, form_authenticity_token%>
      Enter a address <br>
      <input type="text" id="place" />
      <button type="submit" id="lookup" class="btn btn-primary"><i class="fa fa-instagram">Submit </i></button>  
    </form>
    <hr>
    <div id="locations_list">
    </div>
  </div>
  <div class="col-lg-7" id="map">
  </div>
</div>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?key=AIzaSyCiMPrSaIv7d5qVyLIXucvfKw2J2AkW5y4&sensor=true&libraries=places"></script>  

<script type="text/javascript">
  var geocoder;
  var map;
  var infowindow;
  var markers = [];

  function initialize() {
    geocoder = new google.maps.Geocoder();
    var loca = new google.maps.LatLng(10.762636, 106.682030);

    map = new google.maps.Map(document.getElementById('map'), {
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      center: loca,
      zoom: 16
    });
  }
  function setMapOnAll(map) {
    console.log(markers);
      for (var i = 0; i < markers.length; i++) {
        markers[i].setMap(map);
      }
    }
  function callback(results, status) {
    if (status == google.maps.places.PlacesServiceStatus.OK) {
      for (var i = 0; i < results.length; i++) {
        createMarker(results[i]);
      }
    }
  }

  function createMarker(place) {
    var placeLoc = place.geometry.location;
    var marker = new google.maps.Marker({
      map: map,
      position: place.geometry.location
    });
    markers.push(marker);

    google.maps.event.addListener(marker, 'mouseover', function() {
      infowindow.setContent(place.name);
      infowindow.open(map, this);
    });
  }
  function codeAddress() {
    setMapOnAll(null);
    var address = document.getElementById("place").value;
    geocoder.geocode({
      'address': address
    }, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
        });
        markers.push(marker);
        var request = {
          location: results[0].geometry.location,
          radius: 50000,
          name: 'ski',
          keyword: 'mountain',
          type: ['park']
        };
        infowindow = new google.maps.InfoWindow();
        var service = new google.maps.places.PlacesService(map);
        service.nearbySearch(request, callback);
      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
  }

  google.maps.event.addDomListener(window, 'load', initialize);
</script>